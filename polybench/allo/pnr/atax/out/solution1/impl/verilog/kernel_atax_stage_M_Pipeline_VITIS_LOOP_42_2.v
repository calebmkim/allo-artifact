// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_atax_stage_M_Pipeline_VITIS_LOOP_42_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_Ax_fifo1_din,
        out_Ax_fifo1_num_data_valid,
        out_Ax_fifo1_fifo_cap,
        out_Ax_fifo1_full_n,
        out_Ax_fifo1_write,
        v2_address0,
        v2_ce0,
        v2_q0,
        v2_1_address0,
        v2_1_ce0,
        v2_1_q0,
        v2_2_address0,
        v2_2_ce0,
        v2_2_q0,
        v2_3_address0,
        v2_3_ce0,
        v2_3_q0,
        v2_4_address0,
        v2_4_ce0,
        v2_4_q0,
        v2_5_address0,
        v2_5_ce0,
        v2_5_q0,
        v2_6_address0,
        v2_6_ce0,
        v2_6_q0,
        v2_7_address0,
        v2_7_ce0,
        v2_7_q0,
        v2_8_address0,
        v2_8_ce0,
        v2_8_q0,
        v2_9_address0,
        v2_9_ce0,
        v2_9_q0,
        v2_10_address0,
        v2_10_ce0,
        v2_10_q0,
        v2_11_address0,
        v2_11_ce0,
        v2_11_q0,
        v2_12_address0,
        v2_12_ce0,
        v2_12_q0,
        v2_13_address0,
        v2_13_ce0,
        v2_13_q0,
        v2_14_address0,
        v2_14_ce0,
        v2_14_q0,
        v2_15_address0,
        v2_15_ce0,
        v2_15_q0,
        v2_16_address0,
        v2_16_ce0,
        v2_16_q0,
        v2_17_address0,
        v2_17_ce0,
        v2_17_q0,
        v2_18_address0,
        v2_18_ce0,
        v2_18_q0,
        v2_19_address0,
        v2_19_ce0,
        v2_19_q0,
        v2_20_address0,
        v2_20_ce0,
        v2_20_q0,
        v2_21_address0,
        v2_21_ce0,
        v2_21_q0,
        v2_22_address0,
        v2_22_ce0,
        v2_22_q0,
        v2_23_address0,
        v2_23_ce0,
        v2_23_q0,
        v2_24_address0,
        v2_24_ce0,
        v2_24_q0,
        v2_25_address0,
        v2_25_ce0,
        v2_25_q0,
        v2_26_address0,
        v2_26_ce0,
        v2_26_q0,
        v2_27_address0,
        v2_27_ce0,
        v2_27_q0,
        v2_28_address0,
        v2_28_ce0,
        v2_28_q0,
        v2_29_address0,
        v2_29_ce0,
        v2_29_q0,
        v2_30_address0,
        v2_30_ce0,
        v2_30_q0,
        v2_31_address0,
        v2_31_ce0,
        v2_31_q0,
        v2_32_address0,
        v2_32_ce0,
        v2_32_q0,
        v2_33_address0,
        v2_33_ce0,
        v2_33_q0,
        v2_34_address0,
        v2_34_ce0,
        v2_34_q0,
        v2_35_address0,
        v2_35_ce0,
        v2_35_q0,
        v2_36_address0,
        v2_36_ce0,
        v2_36_q0,
        v2_37_address0,
        v2_37_ce0,
        v2_37_q0,
        v2_38_address0,
        v2_38_ce0,
        v2_38_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] out_Ax_fifo1_din;
input  [9:0] out_Ax_fifo1_num_data_valid;
input  [9:0] out_Ax_fifo1_fifo_cap;
input   out_Ax_fifo1_full_n;
output   out_Ax_fifo1_write;
output  [3:0] v2_address0;
output   v2_ce0;
input  [31:0] v2_q0;
output  [3:0] v2_1_address0;
output   v2_1_ce0;
input  [31:0] v2_1_q0;
output  [3:0] v2_2_address0;
output   v2_2_ce0;
input  [31:0] v2_2_q0;
output  [3:0] v2_3_address0;
output   v2_3_ce0;
input  [31:0] v2_3_q0;
output  [3:0] v2_4_address0;
output   v2_4_ce0;
input  [31:0] v2_4_q0;
output  [3:0] v2_5_address0;
output   v2_5_ce0;
input  [31:0] v2_5_q0;
output  [3:0] v2_6_address0;
output   v2_6_ce0;
input  [31:0] v2_6_q0;
output  [3:0] v2_7_address0;
output   v2_7_ce0;
input  [31:0] v2_7_q0;
output  [3:0] v2_8_address0;
output   v2_8_ce0;
input  [31:0] v2_8_q0;
output  [3:0] v2_9_address0;
output   v2_9_ce0;
input  [31:0] v2_9_q0;
output  [3:0] v2_10_address0;
output   v2_10_ce0;
input  [31:0] v2_10_q0;
output  [3:0] v2_11_address0;
output   v2_11_ce0;
input  [31:0] v2_11_q0;
output  [3:0] v2_12_address0;
output   v2_12_ce0;
input  [31:0] v2_12_q0;
output  [3:0] v2_13_address0;
output   v2_13_ce0;
input  [31:0] v2_13_q0;
output  [3:0] v2_14_address0;
output   v2_14_ce0;
input  [31:0] v2_14_q0;
output  [3:0] v2_15_address0;
output   v2_15_ce0;
input  [31:0] v2_15_q0;
output  [3:0] v2_16_address0;
output   v2_16_ce0;
input  [31:0] v2_16_q0;
output  [3:0] v2_17_address0;
output   v2_17_ce0;
input  [31:0] v2_17_q0;
output  [3:0] v2_18_address0;
output   v2_18_ce0;
input  [31:0] v2_18_q0;
output  [3:0] v2_19_address0;
output   v2_19_ce0;
input  [31:0] v2_19_q0;
output  [3:0] v2_20_address0;
output   v2_20_ce0;
input  [31:0] v2_20_q0;
output  [3:0] v2_21_address0;
output   v2_21_ce0;
input  [31:0] v2_21_q0;
output  [3:0] v2_22_address0;
output   v2_22_ce0;
input  [31:0] v2_22_q0;
output  [3:0] v2_23_address0;
output   v2_23_ce0;
input  [31:0] v2_23_q0;
output  [3:0] v2_24_address0;
output   v2_24_ce0;
input  [31:0] v2_24_q0;
output  [3:0] v2_25_address0;
output   v2_25_ce0;
input  [31:0] v2_25_q0;
output  [3:0] v2_26_address0;
output   v2_26_ce0;
input  [31:0] v2_26_q0;
output  [3:0] v2_27_address0;
output   v2_27_ce0;
input  [31:0] v2_27_q0;
output  [3:0] v2_28_address0;
output   v2_28_ce0;
input  [31:0] v2_28_q0;
output  [3:0] v2_29_address0;
output   v2_29_ce0;
input  [31:0] v2_29_q0;
output  [3:0] v2_30_address0;
output   v2_30_ce0;
input  [31:0] v2_30_q0;
output  [3:0] v2_31_address0;
output   v2_31_ce0;
input  [31:0] v2_31_q0;
output  [3:0] v2_32_address0;
output   v2_32_ce0;
input  [31:0] v2_32_q0;
output  [3:0] v2_33_address0;
output   v2_33_ce0;
input  [31:0] v2_33_q0;
output  [3:0] v2_34_address0;
output   v2_34_ce0;
input  [31:0] v2_34_q0;
output  [3:0] v2_35_address0;
output   v2_35_ce0;
input  [31:0] v2_35_q0;
output  [3:0] v2_36_address0;
output   v2_36_ce0;
input  [31:0] v2_36_q0;
output  [3:0] v2_37_address0;
output   v2_37_ce0;
input  [31:0] v2_37_q0;
output  [3:0] v2_38_address0;
output   v2_38_ce0;
input  [31:0] v2_38_q0;

reg ap_idle;
reg out_Ax_fifo1_write;
reg v2_ce0;
reg v2_1_ce0;
reg v2_2_ce0;
reg v2_3_ce0;
reg v2_4_ce0;
reg v2_5_ce0;
reg v2_6_ce0;
reg v2_7_ce0;
reg v2_8_ce0;
reg v2_9_ce0;
reg v2_10_ce0;
reg v2_11_ce0;
reg v2_12_ce0;
reg v2_13_ce0;
reg v2_14_ce0;
reg v2_15_ce0;
reg v2_16_ce0;
reg v2_17_ce0;
reg v2_18_ce0;
reg v2_19_ce0;
reg v2_20_ce0;
reg v2_21_ce0;
reg v2_22_ce0;
reg v2_23_ce0;
reg v2_24_ce0;
reg v2_25_ce0;
reg v2_26_ce0;
reg v2_27_ce0;
reg v2_28_ce0;
reg v2_29_ce0;
reg v2_30_ce0;
reg v2_31_ce0;
reg v2_32_ce0;
reg v2_33_ce0;
reg v2_34_ce0;
reg v2_35_ce0;
reg v2_36_ce0;
reg v2_37_ce0;
reg v2_38_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln42_fu_672_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    out_Ax_fifo1_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] add_ln42_1_fu_759_p2;
reg   [8:0] add_ln42_1_reg_1090;
wire   [0:0] icmp_ln42_1_fu_765_p2;
reg   [0:0] icmp_ln42_1_reg_1095;
wire   [31:0] tmp_fu_771_p41;
reg   [31:0] tmp_reg_1100;
wire   [63:0] zext_ln43_fu_703_p1;
reg   [8:0] phi_urem951_fu_128;
wire   [8:0] select_ln42_fu_855_p3;
reg   [8:0] ap_sig_allocacmp_phi_urem951_load;
wire    ap_loop_init;
reg   [18:0] phi_mul949_fu_132;
wire   [18:0] add_ln43_fu_687_p2;
reg   [18:0] ap_sig_allocacmp_phi_mul949_load;
reg   [8:0] i_fu_136;
wire   [8:0] add_ln42_fu_678_p2;
reg   [8:0] ap_sig_allocacmp_i_1;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] tmp_2_fu_693_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_atax_mux_399_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 9 ),
    .dout_WIDTH( 32 ))
mux_399_32_1_1_U203(
    .din0(v2_q0),
    .din1(v2_1_q0),
    .din2(v2_2_q0),
    .din3(v2_3_q0),
    .din4(v2_4_q0),
    .din5(v2_5_q0),
    .din6(v2_6_q0),
    .din7(v2_7_q0),
    .din8(v2_8_q0),
    .din9(v2_9_q0),
    .din10(v2_10_q0),
    .din11(v2_11_q0),
    .din12(v2_12_q0),
    .din13(v2_13_q0),
    .din14(v2_14_q0),
    .din15(v2_15_q0),
    .din16(v2_16_q0),
    .din17(v2_17_q0),
    .din18(v2_18_q0),
    .din19(v2_19_q0),
    .din20(v2_20_q0),
    .din21(v2_21_q0),
    .din22(v2_22_q0),
    .din23(v2_23_q0),
    .din24(v2_24_q0),
    .din25(v2_25_q0),
    .din26(v2_26_q0),
    .din27(v2_27_q0),
    .din28(v2_28_q0),
    .din29(v2_29_q0),
    .din30(v2_30_q0),
    .din31(v2_31_q0),
    .din32(v2_32_q0),
    .din33(v2_33_q0),
    .din34(v2_34_q0),
    .din35(v2_35_q0),
    .din36(v2_36_q0),
    .din37(v2_37_q0),
    .din38(v2_38_q0),
    .din39(ap_sig_allocacmp_phi_urem951_load),
    .dout(tmp_fu_771_p41)
);

kernel_atax_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln42_fu_672_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_136 <= add_ln42_fu_678_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_136 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln42_fu_672_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_mul949_fu_132 <= add_ln43_fu_687_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_mul949_fu_132 <= 19'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem951_fu_128 <= 9'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_urem951_fu_128 <= select_ln42_fu_855_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln42_1_reg_1090 <= add_ln42_1_fu_759_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln42_1_reg_1095 <= icmp_ln42_1_fu_765_p2;
        tmp_reg_1100 <= tmp_fu_771_p41;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_672_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_phi_mul949_load = 19'd0;
    end else begin
        ap_sig_allocacmp_phi_mul949_load = phi_mul949_fu_132;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_phi_urem951_load = select_ln42_fu_855_p3;
    end else begin
        ap_sig_allocacmp_phi_urem951_load = phi_urem951_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_Ax_fifo1_blk_n = out_Ax_fifo1_full_n;
    end else begin
        out_Ax_fifo1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_Ax_fifo1_write = 1'b1;
    end else begin
        out_Ax_fifo1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_10_ce0 = 1'b1;
    end else begin
        v2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_11_ce0 = 1'b1;
    end else begin
        v2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_12_ce0 = 1'b1;
    end else begin
        v2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_13_ce0 = 1'b1;
    end else begin
        v2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_14_ce0 = 1'b1;
    end else begin
        v2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_15_ce0 = 1'b1;
    end else begin
        v2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_16_ce0 = 1'b1;
    end else begin
        v2_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_17_ce0 = 1'b1;
    end else begin
        v2_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_18_ce0 = 1'b1;
    end else begin
        v2_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_19_ce0 = 1'b1;
    end else begin
        v2_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_1_ce0 = 1'b1;
    end else begin
        v2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_20_ce0 = 1'b1;
    end else begin
        v2_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_21_ce0 = 1'b1;
    end else begin
        v2_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_22_ce0 = 1'b1;
    end else begin
        v2_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_23_ce0 = 1'b1;
    end else begin
        v2_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_24_ce0 = 1'b1;
    end else begin
        v2_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_25_ce0 = 1'b1;
    end else begin
        v2_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_26_ce0 = 1'b1;
    end else begin
        v2_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_27_ce0 = 1'b1;
    end else begin
        v2_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_28_ce0 = 1'b1;
    end else begin
        v2_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_29_ce0 = 1'b1;
    end else begin
        v2_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_2_ce0 = 1'b1;
    end else begin
        v2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_30_ce0 = 1'b1;
    end else begin
        v2_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_31_ce0 = 1'b1;
    end else begin
        v2_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_32_ce0 = 1'b1;
    end else begin
        v2_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_33_ce0 = 1'b1;
    end else begin
        v2_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_34_ce0 = 1'b1;
    end else begin
        v2_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_35_ce0 = 1'b1;
    end else begin
        v2_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_36_ce0 = 1'b1;
    end else begin
        v2_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_37_ce0 = 1'b1;
    end else begin
        v2_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_38_ce0 = 1'b1;
    end else begin
        v2_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_3_ce0 = 1'b1;
    end else begin
        v2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_4_ce0 = 1'b1;
    end else begin
        v2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_5_ce0 = 1'b1;
    end else begin
        v2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_6_ce0 = 1'b1;
    end else begin
        v2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_7_ce0 = 1'b1;
    end else begin
        v2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_8_ce0 = 1'b1;
    end else begin
        v2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_9_ce0 = 1'b1;
    end else begin
        v2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_ce0 = 1'b1;
    end else begin
        v2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln42_1_fu_759_p2 = (ap_sig_allocacmp_phi_urem951_load + 9'd1);

assign add_ln42_fu_678_p2 = (ap_sig_allocacmp_i_1 + 9'd1);

assign add_ln43_fu_687_p2 = (ap_sig_allocacmp_phi_mul949_load + 19'd841);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((out_Ax_fifo1_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((out_Ax_fifo1_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((out_Ax_fifo1_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (out_Ax_fifo1_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln42_1_fu_765_p2 = ((add_ln42_1_fu_759_p2 < 9'd39) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_672_p2 = ((ap_sig_allocacmp_i_1 == 9'd390) ? 1'b1 : 1'b0);

assign out_Ax_fifo1_din = tmp_reg_1100;

assign select_ln42_fu_855_p3 = ((icmp_ln42_1_reg_1095[0:0] == 1'b1) ? add_ln42_1_reg_1090 : 9'd0);

assign tmp_2_fu_693_p4 = {{ap_sig_allocacmp_phi_mul949_load[18:15]}};

assign v2_10_address0 = zext_ln43_fu_703_p1;

assign v2_11_address0 = zext_ln43_fu_703_p1;

assign v2_12_address0 = zext_ln43_fu_703_p1;

assign v2_13_address0 = zext_ln43_fu_703_p1;

assign v2_14_address0 = zext_ln43_fu_703_p1;

assign v2_15_address0 = zext_ln43_fu_703_p1;

assign v2_16_address0 = zext_ln43_fu_703_p1;

assign v2_17_address0 = zext_ln43_fu_703_p1;

assign v2_18_address0 = zext_ln43_fu_703_p1;

assign v2_19_address0 = zext_ln43_fu_703_p1;

assign v2_1_address0 = zext_ln43_fu_703_p1;

assign v2_20_address0 = zext_ln43_fu_703_p1;

assign v2_21_address0 = zext_ln43_fu_703_p1;

assign v2_22_address0 = zext_ln43_fu_703_p1;

assign v2_23_address0 = zext_ln43_fu_703_p1;

assign v2_24_address0 = zext_ln43_fu_703_p1;

assign v2_25_address0 = zext_ln43_fu_703_p1;

assign v2_26_address0 = zext_ln43_fu_703_p1;

assign v2_27_address0 = zext_ln43_fu_703_p1;

assign v2_28_address0 = zext_ln43_fu_703_p1;

assign v2_29_address0 = zext_ln43_fu_703_p1;

assign v2_2_address0 = zext_ln43_fu_703_p1;

assign v2_30_address0 = zext_ln43_fu_703_p1;

assign v2_31_address0 = zext_ln43_fu_703_p1;

assign v2_32_address0 = zext_ln43_fu_703_p1;

assign v2_33_address0 = zext_ln43_fu_703_p1;

assign v2_34_address0 = zext_ln43_fu_703_p1;

assign v2_35_address0 = zext_ln43_fu_703_p1;

assign v2_36_address0 = zext_ln43_fu_703_p1;

assign v2_37_address0 = zext_ln43_fu_703_p1;

assign v2_38_address0 = zext_ln43_fu_703_p1;

assign v2_3_address0 = zext_ln43_fu_703_p1;

assign v2_4_address0 = zext_ln43_fu_703_p1;

assign v2_5_address0 = zext_ln43_fu_703_p1;

assign v2_6_address0 = zext_ln43_fu_703_p1;

assign v2_7_address0 = zext_ln43_fu_703_p1;

assign v2_8_address0 = zext_ln43_fu_703_p1;

assign v2_9_address0 = zext_ln43_fu_703_p1;

assign v2_address0 = zext_ln43_fu_703_p1;

assign zext_ln43_fu_703_p1 = tmp_2_fu_693_p4;

endmodule //kernel_atax_stage_M_Pipeline_VITIS_LOOP_42_2
