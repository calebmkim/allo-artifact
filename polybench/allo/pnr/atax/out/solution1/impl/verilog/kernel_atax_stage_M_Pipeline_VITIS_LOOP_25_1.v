// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_atax_stage_M_Pipeline_VITIS_LOOP_25_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v2_address0,
        v2_ce0,
        v2_we0,
        v2_d0,
        v2_1_address0,
        v2_1_ce0,
        v2_1_we0,
        v2_1_d0,
        v2_2_address0,
        v2_2_ce0,
        v2_2_we0,
        v2_2_d0,
        v2_3_address0,
        v2_3_ce0,
        v2_3_we0,
        v2_3_d0,
        v2_4_address0,
        v2_4_ce0,
        v2_4_we0,
        v2_4_d0,
        v2_5_address0,
        v2_5_ce0,
        v2_5_we0,
        v2_5_d0,
        v2_6_address0,
        v2_6_ce0,
        v2_6_we0,
        v2_6_d0,
        v2_7_address0,
        v2_7_ce0,
        v2_7_we0,
        v2_7_d0,
        v2_8_address0,
        v2_8_ce0,
        v2_8_we0,
        v2_8_d0,
        v2_9_address0,
        v2_9_ce0,
        v2_9_we0,
        v2_9_d0,
        v2_10_address0,
        v2_10_ce0,
        v2_10_we0,
        v2_10_d0,
        v2_11_address0,
        v2_11_ce0,
        v2_11_we0,
        v2_11_d0,
        v2_12_address0,
        v2_12_ce0,
        v2_12_we0,
        v2_12_d0,
        v2_13_address0,
        v2_13_ce0,
        v2_13_we0,
        v2_13_d0,
        v2_14_address0,
        v2_14_ce0,
        v2_14_we0,
        v2_14_d0,
        v2_15_address0,
        v2_15_ce0,
        v2_15_we0,
        v2_15_d0,
        v2_16_address0,
        v2_16_ce0,
        v2_16_we0,
        v2_16_d0,
        v2_17_address0,
        v2_17_ce0,
        v2_17_we0,
        v2_17_d0,
        v2_18_address0,
        v2_18_ce0,
        v2_18_we0,
        v2_18_d0,
        v2_19_address0,
        v2_19_ce0,
        v2_19_we0,
        v2_19_d0,
        v2_20_address0,
        v2_20_ce0,
        v2_20_we0,
        v2_20_d0,
        v2_21_address0,
        v2_21_ce0,
        v2_21_we0,
        v2_21_d0,
        v2_22_address0,
        v2_22_ce0,
        v2_22_we0,
        v2_22_d0,
        v2_23_address0,
        v2_23_ce0,
        v2_23_we0,
        v2_23_d0,
        v2_24_address0,
        v2_24_ce0,
        v2_24_we0,
        v2_24_d0,
        v2_25_address0,
        v2_25_ce0,
        v2_25_we0,
        v2_25_d0,
        v2_26_address0,
        v2_26_ce0,
        v2_26_we0,
        v2_26_d0,
        v2_27_address0,
        v2_27_ce0,
        v2_27_we0,
        v2_27_d0,
        v2_28_address0,
        v2_28_ce0,
        v2_28_we0,
        v2_28_d0,
        v2_29_address0,
        v2_29_ce0,
        v2_29_we0,
        v2_29_d0,
        v2_30_address0,
        v2_30_ce0,
        v2_30_we0,
        v2_30_d0,
        v2_31_address0,
        v2_31_ce0,
        v2_31_we0,
        v2_31_d0,
        v2_32_address0,
        v2_32_ce0,
        v2_32_we0,
        v2_32_d0,
        v2_33_address0,
        v2_33_ce0,
        v2_33_we0,
        v2_33_d0,
        v2_34_address0,
        v2_34_ce0,
        v2_34_we0,
        v2_34_d0,
        v2_35_address0,
        v2_35_ce0,
        v2_35_we0,
        v2_35_d0,
        v2_36_address0,
        v2_36_ce0,
        v2_36_we0,
        v2_36_d0,
        v2_37_address0,
        v2_37_ce0,
        v2_37_we0,
        v2_37_d0,
        v2_38_address0,
        v2_38_ce0,
        v2_38_we0,
        v2_38_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v2_address0;
output   v2_ce0;
output   v2_we0;
output  [31:0] v2_d0;
output  [3:0] v2_1_address0;
output   v2_1_ce0;
output   v2_1_we0;
output  [31:0] v2_1_d0;
output  [3:0] v2_2_address0;
output   v2_2_ce0;
output   v2_2_we0;
output  [31:0] v2_2_d0;
output  [3:0] v2_3_address0;
output   v2_3_ce0;
output   v2_3_we0;
output  [31:0] v2_3_d0;
output  [3:0] v2_4_address0;
output   v2_4_ce0;
output   v2_4_we0;
output  [31:0] v2_4_d0;
output  [3:0] v2_5_address0;
output   v2_5_ce0;
output   v2_5_we0;
output  [31:0] v2_5_d0;
output  [3:0] v2_6_address0;
output   v2_6_ce0;
output   v2_6_we0;
output  [31:0] v2_6_d0;
output  [3:0] v2_7_address0;
output   v2_7_ce0;
output   v2_7_we0;
output  [31:0] v2_7_d0;
output  [3:0] v2_8_address0;
output   v2_8_ce0;
output   v2_8_we0;
output  [31:0] v2_8_d0;
output  [3:0] v2_9_address0;
output   v2_9_ce0;
output   v2_9_we0;
output  [31:0] v2_9_d0;
output  [3:0] v2_10_address0;
output   v2_10_ce0;
output   v2_10_we0;
output  [31:0] v2_10_d0;
output  [3:0] v2_11_address0;
output   v2_11_ce0;
output   v2_11_we0;
output  [31:0] v2_11_d0;
output  [3:0] v2_12_address0;
output   v2_12_ce0;
output   v2_12_we0;
output  [31:0] v2_12_d0;
output  [3:0] v2_13_address0;
output   v2_13_ce0;
output   v2_13_we0;
output  [31:0] v2_13_d0;
output  [3:0] v2_14_address0;
output   v2_14_ce0;
output   v2_14_we0;
output  [31:0] v2_14_d0;
output  [3:0] v2_15_address0;
output   v2_15_ce0;
output   v2_15_we0;
output  [31:0] v2_15_d0;
output  [3:0] v2_16_address0;
output   v2_16_ce0;
output   v2_16_we0;
output  [31:0] v2_16_d0;
output  [3:0] v2_17_address0;
output   v2_17_ce0;
output   v2_17_we0;
output  [31:0] v2_17_d0;
output  [3:0] v2_18_address0;
output   v2_18_ce0;
output   v2_18_we0;
output  [31:0] v2_18_d0;
output  [3:0] v2_19_address0;
output   v2_19_ce0;
output   v2_19_we0;
output  [31:0] v2_19_d0;
output  [3:0] v2_20_address0;
output   v2_20_ce0;
output   v2_20_we0;
output  [31:0] v2_20_d0;
output  [3:0] v2_21_address0;
output   v2_21_ce0;
output   v2_21_we0;
output  [31:0] v2_21_d0;
output  [3:0] v2_22_address0;
output   v2_22_ce0;
output   v2_22_we0;
output  [31:0] v2_22_d0;
output  [3:0] v2_23_address0;
output   v2_23_ce0;
output   v2_23_we0;
output  [31:0] v2_23_d0;
output  [3:0] v2_24_address0;
output   v2_24_ce0;
output   v2_24_we0;
output  [31:0] v2_24_d0;
output  [3:0] v2_25_address0;
output   v2_25_ce0;
output   v2_25_we0;
output  [31:0] v2_25_d0;
output  [3:0] v2_26_address0;
output   v2_26_ce0;
output   v2_26_we0;
output  [31:0] v2_26_d0;
output  [3:0] v2_27_address0;
output   v2_27_ce0;
output   v2_27_we0;
output  [31:0] v2_27_d0;
output  [3:0] v2_28_address0;
output   v2_28_ce0;
output   v2_28_we0;
output  [31:0] v2_28_d0;
output  [3:0] v2_29_address0;
output   v2_29_ce0;
output   v2_29_we0;
output  [31:0] v2_29_d0;
output  [3:0] v2_30_address0;
output   v2_30_ce0;
output   v2_30_we0;
output  [31:0] v2_30_d0;
output  [3:0] v2_31_address0;
output   v2_31_ce0;
output   v2_31_we0;
output  [31:0] v2_31_d0;
output  [3:0] v2_32_address0;
output   v2_32_ce0;
output   v2_32_we0;
output  [31:0] v2_32_d0;
output  [3:0] v2_33_address0;
output   v2_33_ce0;
output   v2_33_we0;
output  [31:0] v2_33_d0;
output  [3:0] v2_34_address0;
output   v2_34_ce0;
output   v2_34_we0;
output  [31:0] v2_34_d0;
output  [3:0] v2_35_address0;
output   v2_35_ce0;
output   v2_35_we0;
output  [31:0] v2_35_d0;
output  [3:0] v2_36_address0;
output   v2_36_ce0;
output   v2_36_we0;
output  [31:0] v2_36_d0;
output  [3:0] v2_37_address0;
output   v2_37_ce0;
output   v2_37_we0;
output  [31:0] v2_37_d0;
output  [3:0] v2_38_address0;
output   v2_38_ce0;
output   v2_38_we0;
output  [31:0] v2_38_d0;

reg ap_idle;
reg v2_ce0;
reg v2_we0;
reg v2_1_ce0;
reg v2_1_we0;
reg v2_2_ce0;
reg v2_2_we0;
reg v2_3_ce0;
reg v2_3_we0;
reg v2_4_ce0;
reg v2_4_we0;
reg v2_5_ce0;
reg v2_5_we0;
reg v2_6_ce0;
reg v2_6_we0;
reg v2_7_ce0;
reg v2_7_we0;
reg v2_8_ce0;
reg v2_8_we0;
reg v2_9_ce0;
reg v2_9_we0;
reg v2_10_ce0;
reg v2_10_we0;
reg v2_11_ce0;
reg v2_11_we0;
reg v2_12_ce0;
reg v2_12_we0;
reg v2_13_ce0;
reg v2_13_we0;
reg v2_14_ce0;
reg v2_14_we0;
reg v2_15_ce0;
reg v2_15_we0;
reg v2_16_ce0;
reg v2_16_we0;
reg v2_17_ce0;
reg v2_17_we0;
reg v2_18_ce0;
reg v2_18_we0;
reg v2_19_ce0;
reg v2_19_we0;
reg v2_20_ce0;
reg v2_20_we0;
reg v2_21_ce0;
reg v2_21_we0;
reg v2_22_ce0;
reg v2_22_we0;
reg v2_23_ce0;
reg v2_23_we0;
reg v2_24_ce0;
reg v2_24_we0;
reg v2_25_ce0;
reg v2_25_we0;
reg v2_26_ce0;
reg v2_26_we0;
reg v2_27_ce0;
reg v2_27_we0;
reg v2_28_ce0;
reg v2_28_we0;
reg v2_29_ce0;
reg v2_29_we0;
reg v2_30_ce0;
reg v2_30_we0;
reg v2_31_ce0;
reg v2_31_we0;
reg v2_32_ce0;
reg v2_32_we0;
reg v2_33_ce0;
reg v2_33_we0;
reg v2_34_ce0;
reg v2_34_we0;
reg v2_35_ce0;
reg v2_35_we0;
reg v2_36_ce0;
reg v2_36_we0;
reg v2_37_ce0;
reg v2_37_we0;
reg v2_38_ce0;
reg v2_38_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln25_fu_770_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [8:0] add_ln25_1_fu_785_p2;
reg   [8:0] add_ln25_1_reg_912;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln25_1_fu_791_p2;
reg   [0:0] icmp_ln25_1_reg_917;
wire   [63:0] zext_ln26_fu_824_p1;
wire    ap_block_pp0_stage0;
reg   [8:0] phi_urem_fu_194;
wire   [8:0] select_ln25_fu_871_p3;
reg   [8:0] ap_sig_allocacmp_phi_urem_load_1;
wire    ap_loop_init;
reg   [18:0] phi_mul_fu_198;
wire   [18:0] add_ln26_fu_808_p2;
reg   [8:0] v4_fu_202;
wire   [8:0] add_ln25_fu_776_p2;
reg   [8:0] ap_sig_allocacmp_v4_2;
wire   [5:0] trunc_ln26_fu_867_p1;
wire   [3:0] tmp_fu_814_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_atax_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_198 <= 19'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_mul_fu_198 <= add_ln26_fu_808_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_194 <= 9'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_urem_fu_194 <= select_ln25_fu_871_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln25_fu_770_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            v4_fu_202 <= add_ln25_fu_776_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            v4_fu_202 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln25_1_reg_912 <= add_ln25_1_fu_785_p2;
        icmp_ln25_1_reg_917 <= icmp_ln25_1_fu_791_p2;
    end
end

always @ (*) begin
    if (((icmp_ln25_fu_770_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_phi_urem_load_1 = 9'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_phi_urem_load_1 = select_ln25_fu_871_p3;
        end else begin
            ap_sig_allocacmp_phi_urem_load_1 = phi_urem_fu_194;
        end
    end else begin
        ap_sig_allocacmp_phi_urem_load_1 = phi_urem_fu_194;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v4_2 = 9'd0;
    end else begin
        ap_sig_allocacmp_v4_2 = v4_fu_202;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_10_ce0 = 1'b1;
    end else begin
        v2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_10_we0 = 1'b1;
    end else begin
        v2_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_11_ce0 = 1'b1;
    end else begin
        v2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_11_we0 = 1'b1;
    end else begin
        v2_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_12_ce0 = 1'b1;
    end else begin
        v2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_12_we0 = 1'b1;
    end else begin
        v2_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_13_ce0 = 1'b1;
    end else begin
        v2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_13_we0 = 1'b1;
    end else begin
        v2_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_14_ce0 = 1'b1;
    end else begin
        v2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_14_we0 = 1'b1;
    end else begin
        v2_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_15_ce0 = 1'b1;
    end else begin
        v2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_15_we0 = 1'b1;
    end else begin
        v2_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_16_ce0 = 1'b1;
    end else begin
        v2_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_16_we0 = 1'b1;
    end else begin
        v2_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_17_ce0 = 1'b1;
    end else begin
        v2_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_17_we0 = 1'b1;
    end else begin
        v2_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_18_ce0 = 1'b1;
    end else begin
        v2_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_18_we0 = 1'b1;
    end else begin
        v2_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_19_ce0 = 1'b1;
    end else begin
        v2_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_19_we0 = 1'b1;
    end else begin
        v2_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_1_ce0 = 1'b1;
    end else begin
        v2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_1_we0 = 1'b1;
    end else begin
        v2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_20_ce0 = 1'b1;
    end else begin
        v2_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_20_we0 = 1'b1;
    end else begin
        v2_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_21_ce0 = 1'b1;
    end else begin
        v2_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_21_we0 = 1'b1;
    end else begin
        v2_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_22_ce0 = 1'b1;
    end else begin
        v2_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_22_we0 = 1'b1;
    end else begin
        v2_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_23_ce0 = 1'b1;
    end else begin
        v2_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_23_we0 = 1'b1;
    end else begin
        v2_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_24_ce0 = 1'b1;
    end else begin
        v2_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_24_we0 = 1'b1;
    end else begin
        v2_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_25_ce0 = 1'b1;
    end else begin
        v2_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_25_we0 = 1'b1;
    end else begin
        v2_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_26_ce0 = 1'b1;
    end else begin
        v2_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_26_we0 = 1'b1;
    end else begin
        v2_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_27_ce0 = 1'b1;
    end else begin
        v2_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd27) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_27_we0 = 1'b1;
    end else begin
        v2_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_28_ce0 = 1'b1;
    end else begin
        v2_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd28) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_28_we0 = 1'b1;
    end else begin
        v2_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_29_ce0 = 1'b1;
    end else begin
        v2_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_29_we0 = 1'b1;
    end else begin
        v2_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_2_ce0 = 1'b1;
    end else begin
        v2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_2_we0 = 1'b1;
    end else begin
        v2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_30_ce0 = 1'b1;
    end else begin
        v2_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_30_we0 = 1'b1;
    end else begin
        v2_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_31_ce0 = 1'b1;
    end else begin
        v2_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_31_we0 = 1'b1;
    end else begin
        v2_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_32_ce0 = 1'b1;
    end else begin
        v2_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd32) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_32_we0 = 1'b1;
    end else begin
        v2_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_33_ce0 = 1'b1;
    end else begin
        v2_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd33) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_33_we0 = 1'b1;
    end else begin
        v2_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_34_ce0 = 1'b1;
    end else begin
        v2_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd34) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_34_we0 = 1'b1;
    end else begin
        v2_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_35_ce0 = 1'b1;
    end else begin
        v2_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd35) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_35_we0 = 1'b1;
    end else begin
        v2_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_36_ce0 = 1'b1;
    end else begin
        v2_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd36) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_36_we0 = 1'b1;
    end else begin
        v2_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_37_ce0 = 1'b1;
    end else begin
        v2_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd37) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_37_we0 = 1'b1;
    end else begin
        v2_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_38_ce0 = 1'b1;
    end else begin
        v2_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((trunc_ln26_fu_867_p1 == 6'd38) | ((trunc_ln26_fu_867_p1 == 6'd39) | ((trunc_ln26_fu_867_p1 == 6'd40) | ((trunc_ln26_fu_867_p1 == 6'd41) | ((trunc_ln26_fu_867_p1 == 6'd42) | ((trunc_ln26_fu_867_p1 == 6'd43) | ((trunc_ln26_fu_867_p1 == 6'd44) | ((trunc_ln26_fu_867_p1 == 6'd45) | ((trunc_ln26_fu_867_p1 == 6'd46) | ((trunc_ln26_fu_867_p1 == 6'd47) | ((trunc_ln26_fu_867_p1 == 6'd48) | ((trunc_ln26_fu_867_p1 == 6'd49) | ((trunc_ln26_fu_867_p1 == 6'd50) | ((trunc_ln26_fu_867_p1 == 6'd51) | ((trunc_ln26_fu_867_p1 == 6'd52) | ((trunc_ln26_fu_867_p1 == 6'd53) | ((trunc_ln26_fu_867_p1 == 6'd54) | ((trunc_ln26_fu_867_p1 == 6'd55) | ((trunc_ln26_fu_867_p1 == 6'd56) | ((trunc_ln26_fu_867_p1 == 6'd57) | ((trunc_ln26_fu_867_p1 == 6'd58) | ((trunc_ln26_fu_867_p1 == 6'd59) | ((trunc_ln26_fu_867_p1 == 6'd60) | ((trunc_ln26_fu_867_p1 == 6'd61) | ((trunc_ln26_fu_867_p1 == 6'd62) | (trunc_ln26_fu_867_p1 == 6'd63)))))))))))))))))))))))))))) begin
        v2_38_we0 = 1'b1;
    end else begin
        v2_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_3_ce0 = 1'b1;
    end else begin
        v2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_3_we0 = 1'b1;
    end else begin
        v2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_4_ce0 = 1'b1;
    end else begin
        v2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_4_we0 = 1'b1;
    end else begin
        v2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_5_ce0 = 1'b1;
    end else begin
        v2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_5_we0 = 1'b1;
    end else begin
        v2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_6_ce0 = 1'b1;
    end else begin
        v2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_6_we0 = 1'b1;
    end else begin
        v2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_7_ce0 = 1'b1;
    end else begin
        v2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_7_we0 = 1'b1;
    end else begin
        v2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_8_ce0 = 1'b1;
    end else begin
        v2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_8_we0 = 1'b1;
    end else begin
        v2_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_9_ce0 = 1'b1;
    end else begin
        v2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_9_we0 = 1'b1;
    end else begin
        v2_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_ce0 = 1'b1;
    end else begin
        v2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_867_p1 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v2_we0 = 1'b1;
    end else begin
        v2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln25_1_fu_785_p2 = (ap_sig_allocacmp_phi_urem_load_1 + 9'd1);

assign add_ln25_fu_776_p2 = (ap_sig_allocacmp_v4_2 + 9'd1);

assign add_ln26_fu_808_p2 = (phi_mul_fu_198 + 19'd841);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln25_1_fu_791_p2 = ((add_ln25_1_fu_785_p2 < 9'd39) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_770_p2 = ((ap_sig_allocacmp_v4_2 == 9'd390) ? 1'b1 : 1'b0);

assign select_ln25_fu_871_p3 = ((icmp_ln25_1_reg_917[0:0] == 1'b1) ? add_ln25_1_reg_912 : 9'd0);

assign tmp_fu_814_p4 = {{phi_mul_fu_198[18:15]}};

assign trunc_ln26_fu_867_p1 = phi_urem_fu_194[5:0];

assign v2_10_address0 = zext_ln26_fu_824_p1;

assign v2_10_d0 = 32'd0;

assign v2_11_address0 = zext_ln26_fu_824_p1;

assign v2_11_d0 = 32'd0;

assign v2_12_address0 = zext_ln26_fu_824_p1;

assign v2_12_d0 = 32'd0;

assign v2_13_address0 = zext_ln26_fu_824_p1;

assign v2_13_d0 = 32'd0;

assign v2_14_address0 = zext_ln26_fu_824_p1;

assign v2_14_d0 = 32'd0;

assign v2_15_address0 = zext_ln26_fu_824_p1;

assign v2_15_d0 = 32'd0;

assign v2_16_address0 = zext_ln26_fu_824_p1;

assign v2_16_d0 = 32'd0;

assign v2_17_address0 = zext_ln26_fu_824_p1;

assign v2_17_d0 = 32'd0;

assign v2_18_address0 = zext_ln26_fu_824_p1;

assign v2_18_d0 = 32'd0;

assign v2_19_address0 = zext_ln26_fu_824_p1;

assign v2_19_d0 = 32'd0;

assign v2_1_address0 = zext_ln26_fu_824_p1;

assign v2_1_d0 = 32'd0;

assign v2_20_address0 = zext_ln26_fu_824_p1;

assign v2_20_d0 = 32'd0;

assign v2_21_address0 = zext_ln26_fu_824_p1;

assign v2_21_d0 = 32'd0;

assign v2_22_address0 = zext_ln26_fu_824_p1;

assign v2_22_d0 = 32'd0;

assign v2_23_address0 = zext_ln26_fu_824_p1;

assign v2_23_d0 = 32'd0;

assign v2_24_address0 = zext_ln26_fu_824_p1;

assign v2_24_d0 = 32'd0;

assign v2_25_address0 = zext_ln26_fu_824_p1;

assign v2_25_d0 = 32'd0;

assign v2_26_address0 = zext_ln26_fu_824_p1;

assign v2_26_d0 = 32'd0;

assign v2_27_address0 = zext_ln26_fu_824_p1;

assign v2_27_d0 = 32'd0;

assign v2_28_address0 = zext_ln26_fu_824_p1;

assign v2_28_d0 = 32'd0;

assign v2_29_address0 = zext_ln26_fu_824_p1;

assign v2_29_d0 = 32'd0;

assign v2_2_address0 = zext_ln26_fu_824_p1;

assign v2_2_d0 = 32'd0;

assign v2_30_address0 = zext_ln26_fu_824_p1;

assign v2_30_d0 = 32'd0;

assign v2_31_address0 = zext_ln26_fu_824_p1;

assign v2_31_d0 = 32'd0;

assign v2_32_address0 = zext_ln26_fu_824_p1;

assign v2_32_d0 = 32'd0;

assign v2_33_address0 = zext_ln26_fu_824_p1;

assign v2_33_d0 = 32'd0;

assign v2_34_address0 = zext_ln26_fu_824_p1;

assign v2_34_d0 = 32'd0;

assign v2_35_address0 = zext_ln26_fu_824_p1;

assign v2_35_d0 = 32'd0;

assign v2_36_address0 = zext_ln26_fu_824_p1;

assign v2_36_d0 = 32'd0;

assign v2_37_address0 = zext_ln26_fu_824_p1;

assign v2_37_d0 = 32'd0;

assign v2_38_address0 = zext_ln26_fu_824_p1;

assign v2_38_d0 = 32'd0;

assign v2_3_address0 = zext_ln26_fu_824_p1;

assign v2_3_d0 = 32'd0;

assign v2_4_address0 = zext_ln26_fu_824_p1;

assign v2_4_d0 = 32'd0;

assign v2_5_address0 = zext_ln26_fu_824_p1;

assign v2_5_d0 = 32'd0;

assign v2_6_address0 = zext_ln26_fu_824_p1;

assign v2_6_d0 = 32'd0;

assign v2_7_address0 = zext_ln26_fu_824_p1;

assign v2_7_d0 = 32'd0;

assign v2_8_address0 = zext_ln26_fu_824_p1;

assign v2_8_d0 = 32'd0;

assign v2_9_address0 = zext_ln26_fu_824_p1;

assign v2_9_d0 = 32'd0;

assign v2_address0 = zext_ln26_fu_824_p1;

assign v2_d0 = 32'd0;

assign zext_ln26_fu_824_p1 = tmp_fu_814_p4;

endmodule //kernel_atax_stage_M_Pipeline_VITIS_LOOP_25_1
